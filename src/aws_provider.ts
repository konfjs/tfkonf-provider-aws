import { TerraformConfig, TerraformResource } from "@tfkonf/core";

export interface AwsProviderArgsAssumeRole {
  alias?: string;
  duration?: string;
  external_id?: string;
  policy?: string;
  policy_arns?: string[];
  role_arn?: string;
  session_name?: string;
  source_identity?: string;
  tags?: { [key: string]: string };
  transitive_tag_keys?: string[];
}

export interface AwsProviderArgsAssumeRoleWithWebIdentity {
  alias?: string;
  duration?: string;
  policy?: string;
  policy_arns?: string[];
  role_arn?: string;
  session_name?: string;
  web_identity_token?: string;
  web_identity_token_file?: string;
}

export interface AwsProviderArgsDefaultTags {
  alias?: string;
  tags?: { [key: string]: string };
}

export interface AwsProviderArgsEndpoints {
  alias?: string;
  accessanalyzer?: string;
  account?: string;
  acm?: string;
  acmpca?: string;
  amg?: string;
  amp?: string;
  amplify?: string;
  apigateway?: string;
  apigatewayv2?: string;
  appautoscaling?: string;
  appconfig?: string;
  appfabric?: string;
  appflow?: string;
  appintegrations?: string;
  appintegrationsservice?: string;
  applicationautoscaling?: string;
  applicationinsights?: string;
  applicationsignals?: string;
  appmesh?: string;
  appregistry?: string;
  apprunner?: string;
  appstream?: string;
  appsync?: string;
  athena?: string;
  auditmanager?: string;
  autoscaling?: string;
  autoscalingplans?: string;
  backup?: string;
  batch?: string;
  bcmdataexports?: string;
  beanstalk?: string;
  bedrock?: string;
  bedrockagent?: string;
  budgets?: string;
  ce?: string;
  chatbot?: string;
  chime?: string;
  chimesdkmediapipelines?: string;
  chimesdkvoice?: string;
  cleanrooms?: string;
  cloud9?: string;
  cloudcontrol?: string;
  cloudcontrolapi?: string;
  cloudformation?: string;
  cloudfront?: string;
  cloudfrontkeyvaluestore?: string;
  cloudhsm?: string;
  cloudhsmv2?: string;
  cloudsearch?: string;
  cloudtrail?: string;
  cloudwatch?: string;
  cloudwatchevents?: string;
  cloudwatchevidently?: string;
  cloudwatchlog?: string;
  cloudwatchlogs?: string;
  cloudwatchobservabilityaccessmanager?: string;
  cloudwatchrum?: string;
  codeartifact?: string;
  codebuild?: string;
  codecatalyst?: string;
  codecommit?: string;
  codeconnections?: string;
  codedeploy?: string;
  codeguruprofiler?: string;
  codegurureviewer?: string;
  codepipeline?: string;
  codestarconnections?: string;
  codestarnotifications?: string;
  cognitoidentity?: string;
  cognitoidentityprovider?: string;
  cognitoidp?: string;
  comprehend?: string;
  computeoptimizer?: string;
  config?: string;
  configservice?: string;
  connect?: string;
  connectcases?: string;
  controltower?: string;
  costandusagereportservice?: string;
  costexplorer?: string;
  costoptimizationhub?: string;
  cur?: string;
  customerprofiles?: string;
  databasemigration?: string;
  databasemigrationservice?: string;
  databrew?: string;
  dataexchange?: string;
  datapipeline?: string;
  datasync?: string;
  datazone?: string;
  dax?: string;
  deploy?: string;
  detective?: string;
  devicefarm?: string;
  devopsguru?: string;
  directconnect?: string;
  directoryservice?: string;
  dlm?: string;
  dms?: string;
  docdb?: string;
  docdbelastic?: string;
  drs?: string;
  ds?: string;
  dynamodb?: string;
  ec2?: string;
  ecr?: string;
  ecrpublic?: string;
  ecs?: string;
  efs?: string;
  eks?: string;
  elasticache?: string;
  elasticbeanstalk?: string;
  elasticloadbalancing?: string;
  elasticloadbalancingv2?: string;
  elasticsearch?: string;
  elasticsearchservice?: string;
  elastictranscoder?: string;
  elb?: string;
  elbv2?: string;
  emr?: string;
  emrcontainers?: string;
  emrserverless?: string;
  es?: string;
  eventbridge?: string;
  events?: string;
  evidently?: string;
  finspace?: string;
  firehose?: string;
  fis?: string;
  fms?: string;
  fsx?: string;
  gamelift?: string;
  glacier?: string;
  globalaccelerator?: string;
  glue?: string;
  gluedatabrew?: string;
  grafana?: string;
  greengrass?: string;
  groundstation?: string;
  guardduty?: string;
  healthlake?: string;
  iam?: string;
  identitystore?: string;
  imagebuilder?: string;
  inspector?: string;
  inspector2?: string;
  inspectorv2?: string;
  internetmonitor?: string;
  iot?: string;
  iotanalytics?: string;
  iotevents?: string;
  ivs?: string;
  ivschat?: string;
  kafka?: string;
  kafkaconnect?: string;
  kendra?: string;
  keyspaces?: string;
  kinesis?: string;
  kinesisanalytics?: string;
  kinesisanalyticsv2?: string;
  kinesisvideo?: string;
  kms?: string;
  lakeformation?: string;
  lambda?: string;
  launchwizard?: string;
  lex?: string;
  lexmodelbuilding?: string;
  lexmodelbuildingservice?: string;
  lexmodels?: string;
  lexmodelsv2?: string;
  lexv2models?: string;
  licensemanager?: string;
  lightsail?: string;
  location?: string;
  locationservice?: string;
  logs?: string;
  lookoutmetrics?: string;
  m2?: string;
  macie2?: string;
  managedgrafana?: string;
  mediaconnect?: string;
  mediaconvert?: string;
  medialive?: string;
  mediapackage?: string;
  mediapackagev2?: string;
  mediastore?: string;
  memorydb?: string;
  mq?: string;
  msk?: string;
  mwaa?: string;
  neptune?: string;
  neptunegraph?: string;
  networkfirewall?: string;
  networkmanager?: string;
  networkmonitor?: string;
  oam?: string;
  opensearch?: string;
  opensearchingestion?: string;
  opensearchserverless?: string;
  opensearchservice?: string;
  opsworks?: string;
  organizations?: string;
  osis?: string;
  outposts?: string;
  paymentcryptography?: string;
  pcaconnectorad?: string;
  pcs?: string;
  pinpoint?: string;
  pinpointsmsvoicev2?: string;
  pipes?: string;
  polly?: string;
  pricing?: string;
  prometheus?: string;
  prometheusservice?: string;
  qbusiness?: string;
  qldb?: string;
  quicksight?: string;
  ram?: string;
  rbin?: string;
  rds?: string;
  recyclebin?: string;
  redshift?: string;
  redshiftdata?: string;
  redshiftdataapiservice?: string;
  redshiftserverless?: string;
  rekognition?: string;
  resiliencehub?: string;
  resourceexplorer2?: string;
  resourcegroups?: string;
  resourcegroupstagging?: string;
  resourcegroupstaggingapi?: string;
  rolesanywhere?: string;
  route53?: string;
  route53domains?: string;
  route53profiles?: string;
  route53recoverycontrolconfig?: string;
  route53recoveryreadiness?: string;
  route53resolver?: string;
  rum?: string;
  s3?: string;
  s3api?: string;
  s3control?: string;
  s3outposts?: string;
  sagemaker?: string;
  scheduler?: string;
  schemas?: string;
  sdb?: string;
  secretsmanager?: string;
  securityhub?: string;
  securitylake?: string;
  serverlessapplicationrepository?: string;
  serverlessapprepo?: string;
  serverlessrepo?: string;
  servicecatalog?: string;
  servicecatalogappregistry?: string;
  servicediscovery?: string;
  servicequotas?: string;
  ses?: string;
  sesv2?: string;
  sfn?: string;
  shield?: string;
  signer?: string;
  simpledb?: string;
  sns?: string;
  sqs?: string;
  ssm?: string;
  ssmcontacts?: string;
  ssmincidents?: string;
  ssmquicksetup?: string;
  ssmsap?: string;
  sso?: string;
  ssoadmin?: string;
  stepfunctions?: string;
  storagegateway?: string;
  sts?: string;
  swf?: string;
  synthetics?: string;
  taxsettings?: string;
  timestreaminfluxdb?: string;
  timestreamwrite?: string;
  transcribe?: string;
  transcribeservice?: string;
  transfer?: string;
  verifiedpermissions?: string;
  vpclattice?: string;
  waf?: string;
  wafregional?: string;
  wafv2?: string;
  wellarchitected?: string;
  worklink?: string;
  workspaces?: string;
  workspacesweb?: string;
  xray?: string;
}

export interface AwsProviderArgsIgnoreTags {
  alias?: string;
  key_prefixes?: string[];
  keys?: string[];
}

export interface AwsProviderArgs {
  alias?: string;
  access_key?: string;
  allowed_account_ids?: string[];
  custom_ca_bundle?: string;
  ec2_metadata_service_endpoint?: string;
  ec2_metadata_service_endpoint_mode?: string;
  forbidden_account_ids?: string[];
  http_proxy?: string;
  https_proxy?: string;
  insecure?: boolean;
  max_retries?: number;
  no_proxy?: string;
  profile?: string;
  region?: string;
  retry_mode?: string;
  s3_us_east_1_regional_endpoint?: string;
  s3_use_path_style?: boolean;
  secret_key?: string;
  shared_config_files?: string[];
  shared_credentials_files?: string[];
  skip_credentials_validation?: boolean;
  skip_metadata_api_check?: string;
  skip_region_validation?: boolean;
  skip_requesting_account_id?: boolean;
  sts_region?: string;
  token?: string;
  token_bucket_rate_limiter_capacity?: number;
  use_dualstack_endpoint?: boolean;
  use_fips_endpoint?: boolean;
  assume_role?: AwsProviderArgsAssumeRole[];
  assume_role_with_web_identity?: AwsProviderArgsAssumeRoleWithWebIdentity[];
  default_tags?: AwsProviderArgsDefaultTags[];
  endpoints?: AwsProviderArgsEndpoints[];
  ignore_tags?: AwsProviderArgsIgnoreTags[];
}

export class aws_provider extends TerraformResource {
  constructor(protected readonly terraformConfig: TerraformConfig, readonly args: AwsProviderArgs) {
    const meta = {assume_role:{isBlock:true},assume_role_with_web_identity:{isBlock:true},default_tags:{isBlock:true},endpoints:{isBlock:true},ignore_tags:{isBlock:true}};
    super(terraformConfig, "provider", args, meta, "aws");
  }
}
