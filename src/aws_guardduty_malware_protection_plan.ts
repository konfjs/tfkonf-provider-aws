import { TerraformConfig, TerraformResource } from "@tfkonf/core";

export interface AwsGuarddutyMalwareProtectionPlanArgsProtectedResourceS3Bucket {
  bucket_name: string;
}

export interface AwsGuarddutyMalwareProtectionPlanArgsProtectedResource {
  s3_bucket?: AwsGuarddutyMalwareProtectionPlanArgsProtectedResourceS3Bucket[];
}

export interface AwsGuarddutyMalwareProtectionPlanArgs {
  role: string;
  tags?: { [key: string]: string };
  protected_resource?: AwsGuarddutyMalwareProtectionPlanArgsProtectedResource[];
}

export class aws_guardduty_malware_protection_plan extends TerraformResource {
  constructor(protected readonly terraformConfig: TerraformConfig, protected readonly resourceName: string, readonly args: AwsGuarddutyMalwareProtectionPlanArgs) {
    const meta = {protected_resource:{isBlock:true,s3_bucket:{isBlock:true}}};
    super(terraformConfig, "resource", args, meta, "aws_guardduty_malware_protection_plan", resourceName);
  }

  get actions(): string {
    return `${this.resourceType}.${this.resourceName}.actions`;
  }

  get arn(): string {
    return `${this.resourceType}.${this.resourceName}.arn`;
  }

  get created_at(): string {
    return `${this.resourceType}.${this.resourceName}.created_at`;
  }

  get id(): string {
    return `${this.resourceType}.${this.resourceName}.id`;
  }

  get role(): string {
    return `${this.resourceType}.${this.resourceName}.role`;
  }

  get status(): string {
    return `${this.resourceType}.${this.resourceName}.status`;
  }

  get tags_all(): string {
    return `${this.resourceType}.${this.resourceName}.tags_all`;
  }
}
